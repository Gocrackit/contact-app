{"ast":null,"code":"var _jsxFileName = \"G:\\\\myReact\\\\React-contact\\\\contact-app\\\\src\\\\listContact.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListContacts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: ''\n    };\n\n    this.updateQuery = query => {\n      this.setState(() => ({\n        query: query.trim()\n      }));\n    };\n  }\n\n  render() {\n    const {\n      query\n    } = this.state;\n    const {\n      contacts,\n      onclickDelete,\n      onNavigate\n    } = this.props;\n    const showingContacts = query === '' ? contacts : contacts.filter(c => c.name.toLowerCase().includes(query.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-contacts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-contacts-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-contacts\",\n      type: \"text\",\n      placeholder: \"search contact\",\n      value: this.state.query,\n      onChange: event => this.updateQuery(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#create\",\n      onClick: onNavigate,\n      className: \"add-contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"add-contact\")), showingContacts.length !== contacts.length && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"showing-contacts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Now showing \", showingContacts.length, \" of \", contacts.length), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateQuery(''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"show all\")), /*#__PURE__*/React.createElement(\"ol\", {\n      className: \"contact-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, showingContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n      key: contact[\"id\"],\n      className: \"contact-list-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-avatar\",\n      style: {\n        backgroundImage: `url(${contact.avatarURL})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, contact['name']), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, contact['handle'])), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => onclickDelete(contact),\n      className: \"contact-remove\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, \"Remove\")))));\n  }\n\n}\n\nListContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onclickDelete: PropTypes.func.isRequired\n};\nexport default ListContacts;","map":{"version":3,"sources":["G:/myReact/React-contact/contact-app/src/listContact.js"],"names":["React","Component","PropTypes","ListContacts","state","query","updateQuery","setState","trim","render","contacts","onclickDelete","onNavigate","props","showingContacts","filter","c","name","toLowerCase","includes","event","target","value","length","map","contact","backgroundImage","avatarURL","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nclass ListContacts extends Component {\r\n  static propTypes={\r\n    contacts:PropTypes.array.isRequired,\r\n    onclickDelete: PropTypes.func.isRequired,\r\n  }\r\n  state={\r\n    query:''\r\n  }\r\n  updateQuery=(query)=>{\r\n    this.setState(()=>(\r\n      {\r\n        query:query.trim()\r\n      }\r\n    ))\r\n  }\r\n  render() {\r\n    const {query}=this.state\r\n    const{contacts,onclickDelete,onNavigate}=this.props\r\n    const showingContacts=query===''? contacts : contacts.filter((c)=>(c.name.toLowerCase().includes(query.toLowerCase())))\r\n    return (\r\n      <div className=\"list-contacts\">\r\n        <div className=\"list-contacts-top\">\r\n          <input className=\"search-contacts\" \r\n          type=\"text\" placeholder=\"search contact\"\r\n           value={this.state.query} \r\n           onChange={(event)=>this.updateQuery(event.target.value)}></input>\r\n        <a href=\"#create\" onClick={onNavigate} className='add-contact'>add-contact</a>\r\n        </div>\r\n      {\r\n        showingContacts.length !==contacts.length &&(\r\n          <div className=\"showing-contacts\">\r\n            <span>Now showing {showingContacts.length} of {contacts.length}</span>\r\n            <button onClick={()=>this.updateQuery('')}>show all</button>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      <ol className='contact-list' >\r\n          {showingContacts.map((contact)=>\r\n          (\r\n          <li key={contact[\"id\"]} className='contact-list-item'> \r\n           <div className=\"contact-avatar\" \r\n            style={{\r\n              backgroundImage: `url(${contact.avatarURL})`\r\n          }}>             \r\n             </div>\r\n             <div className='contact-details'>\r\n        <p>{contact['name']}</p>\r\n        <p>{contact['handle']}</p>\r\n               </div> \r\n               <button onClick={()=>onclickDelete(contact)} className='contact-remove'>\r\n            Remove\r\n          </button>\r\n          </li>\r\n          ))}  \r\n         </ol>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListContacts"]},"metadata":{},"sourceType":"module"}